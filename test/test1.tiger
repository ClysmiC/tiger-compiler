/**
 * This file doesn't do anything significant, rather it simply tests non-trivial things such as
 * loops, if-statements, floating point operations, and function calls (2 levels deep, non-recursive).
 *
 * It's output is basically useless, but it matches the expected output that I generated by writing
 * an identical Java program.
 */


let
	type ArrayInt = array[100] of int;

	var myArray : ArrayInt;
	var x : int := 0;
	var y : int := 7;
	var z : int := 20;

	var loopCounter : int;
	var loopCounter2 : int;

	var myFloat : float := 3.5;

	function doubleMe (input : int) : int
	begin
		return input + input;
	end;

	function quadrupleMe (input : int) : int
	begin
		input := doubleMe(input);
		input := doubleMe(input);
		return input;
	end;
in
	for loopCounter := 1 + 3 to 6 + 7
	do
		if (loopCounter & 1) then
			x := x + y;
			myFloat := x / 1.5;
		else
			x := x + z;
			myFloat := x / 1.5;

			/* just trying to rack up the variable count for this
			   basic block, so the difference between naive and basic
			   block allocation registration can be seen more clearly*/
			x := x - loopCounter;
			x := x + loopCounter;
			x := x + loopCounter;

			for loopCounter2 := 1 to 4
			do
				x := x + loopCounter;
			enddo;
		endif;
	enddo;

	x := quadrupleMe(x);
	myFloat := myFloat * 2;

	printi(x);
	printf(myFloat);
end