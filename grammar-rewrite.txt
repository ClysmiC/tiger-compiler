Step 1: remove order-of-operation ambiguity

<expr> -> 	<expr> | <term1>
			<term1>

<term1> ->	<term1> & <term2>
			<term2>

<term2> -> 	<term2> <inequality-op> <term3>
			<term3>

<term3> ->	<term3> <equality-op> <term4>
			<term4>

<term4> ->	<term4> <add-sub-op> <term5>
			<term5>

<term5> ->	<term5> <mul-div-op> <factor>
			<factor>

<factor> -> (<expr>)
			id
			<const>
			<lvalue>

<inequality-op> -> 	<
					>
					<=
					>=

<equality-op> -> 	=
					<>

<add-sub-op> ->	+
				-

<mul-div-op> -> *
				/


Step 2: modify grammar to support LL(1) parsing (remove left-recursion
and do left-factoring).

