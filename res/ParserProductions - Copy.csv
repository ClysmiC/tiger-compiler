*,<TIGER_PROGRAM>,LET <DECLARATION_SEGMENT> IN <STAT_SEQ> END
*,<DECLARATION_SEGMENT>,<TYPE_DECLARATION_LIST> <VAR_DECLARATION_LIST> <FUNC_DECLARATION_LIST>
*,<TYPE_DECLARATION_LIST>,NULL
*,<TYPE_DECLARATION_LIST>,<TYPE_DECLARATION> <TYPE_DECLARATION_LIST>
*,<VAR_DECLARATION_LIST>,NULL
*,<VAR_DECLARATION_LIST>,<VAR_DECLARATION> <VAR_DECLARATION_LIST>
*,<FUNC_DECLARATION_LIST>,NULL
*,<FUNC_DECLARATION_LIST>,<FUNC_DECLARATION> <FUNC_DECLARATION_LIST>
*,<TYPE_DECLARATION>,TYPE ID #PUT_ID_STACK EQ <TYPE_SYMBOL> #PUT_TYPE_TABLE SEMI 
*,<TYPE_SYMBOL>,<TYPE_ID> #PUT_FALSE_STACK #PUT_TYPE_STACK
*,<TYPE_SYMBOL>,ARRAY LBRACK INTLIT #PUT_INT_STACK #PUT_TRUE_STACK RBRACK OF <TYPE_ID> #PUT_TYPE_STACK
*,<TYPE_SYMBOL>,ID #PUT_FALSE_STACK #PUT_TYPE_STACK
*,<TYPE_ID>,INT
*,<TYPE_ID>,FLOAT
*,<VAR_DECLARATION>,VAR <ID_LIST> COLON <TYPE_SYMBOL> <OPTIONAL_INIT> #PUT_VARS_TABLE SEMI
*,<ID_LIST>,ID #PUT_ID_STACK <ID_LIST_TAIL>
*,<ID_LIST_TAIL>,COMMA ID #PUT_ID_STACK <ID_LIST_TAIL>
*,<ID_LIST_TAIL>,NULL
*,<OPTIONAL_INIT>,ASSIGN <CONST>
*,<OPTIONAL_INIT>,NULL
*,<FUNC_DECLARATION>,FUNCTION ID #PUT_ID_STACK LPAREN <PARAM_LIST> RPAREN <RET_TYPE> #PUT_FUNC_TABLE BEGIN <STAT_SEQ> END SEMI
*,<PARAM_LIST>,<PARAM> <PARAM_LIST_TAIL>
*,<PARAM_LIST>,NULL
*,<PARAM_LIST_TAIL>,COMMA <PARAM> <PARAM_LIST_TAIL>
*,<PARAM_LIST_TAIL>,NULL
*,<RET_TYPE>,COLON <TYPE_SYMBOL> #PUT_TRUE_STACK
*,<RET_TYPE>,NULL #PUT_FALSE_STACK
*,<PARAM>,ID #PUT_ID_STACK COLON <TYPE_SYMBOL>
*,<STAT_SEQ>,<STAT> <STAT_SEQ_CONT>
*,<STAT_SEQ_CONT>,<STAT_SEQ>
*,<STAT_SEQ_CONT>,NULL
*,<STAT>,<IF_STAT> <IF_END> SEMI
*,<STAT>,ID <STAT_ASSIGN_OR_FUNC> SEMI
*,<STAT>,WHILE <EXPR> DO #LOOP_ENTER <STAT_SEQ> ENDDO #LOOP_EXIT SEMI
*,<STAT>,FOR ID ASSIGN <EXPR> TO <EXPR> DO #LOOP_ENTER <STAT_SEQ> ENDDO #LOOP_EXIT SEMI
*,<STAT>,BREAK #LOOP_BREAK SEMI
*,<STAT>,RETURN <EXPR> SEMI
*,<STAT_ASSIGN_OR_FUNC>,<LVALUE_TAIL> ASSIGN <STAT_ASSIGN_RHS>
*,<STAT_ASSIGN_OR_FUNC>,<FUNC_CALL_END>
*,<STAT_ASSIGN_RHS>,ID <EXPR_OR_FUNC_END>
*,<STAT_ASSIGN_RHS>,LPAREN <EXPR> RPAREN <PRIME_TERM>
*,<STAT_ASSIGN_RHS>,<CONST> <PRIME_TERM>
*,<EXPR_OR_FUNC_END>,<LVALUE_TAIL> <PRIME_TERM>
*,<EXPR_OR_FUNC_END>,<FUNC_CALL_END>
*,<FUNC_CALL_END>,LPAREN <EXPR_LIST> RPAREN
*,<IF_STAT>,IF <EXPR> THEN <STAT_SEQ>
*,<IF_END>,ENDIF
*,<IF_END>,ELSE <STAT_SEQ> ENDIF
*,<EXPR>,<TERM1> <EXPR_PRIME>
*,<EXPR_PRIME>,OR <TERM1> <EXPR_PRIME>
*,<EXPR_PRIME>,NULL
*,<TERM1>,<TERM2> <TERM1_PRIME>
*,<TERM1_PRIME>,AND <TERM2> <TERM1_PRIME>
*,<TERM1_PRIME>,NULL
*,<TERM2>,<TERM3> <TERM2_PRIME>
*,<TERM2_PRIME>,<INEQUALITY_OP> <TERM3> <TERM2_PRIME>
*,<TERM2_PRIME>,NULL
*,<TERM3>,<TERM4> <TERM3_PRIME>
*,<TERM3_PRIME>,<EQUALITY_OP> <TERM4> <TERM3_PRIME>
*,<TERM3_PRIME>,NULL
*,<TERM4>,<TERM5> <TERM4_PRIME>
*,<TERM4_PRIME>,<ADD_SUB_OP> <TERM5> <TERM4_PRIME>
*,<TERM4_PRIME>,NULL
*,<TERM5>,<FACTOR> <TERM5_PRIME>
*,<TERM5_PRIME>,<MUL_DIV_OP> <FACTOR> <TERM5_PRIME>
*,<TERM5_PRIME>,NULL
*,<FACTOR>,LPAREN <EXPR> RPAREN
*,<FACTOR>,ID <LVALUE_TAIL>
*,<FACTOR>,<CONST>
*,<PRIME_TERM>,OR <TERM1> <EXPR_PRIME>
*,<PRIME_TERM>,AND <TERM2> <TERM1_PRIME>
*,<PRIME_TERM>,<INEQUALITY_OP> <TERM3> <TERM2_PRIME>
*,<PRIME_TERM>,<EQUALITY_OP> <TERM4> <TERM3_PRIME>
*,<PRIME_TERM>,<ADD_SUB_OP> <TERM5> <TERM4_PRIME>
*,<PRIME_TERM>,<MUL_DIV_OP> <FACTOR> <TERM5_PRIME>
*,<PRIME_TERM>,NULL
*,<CONST>,INTLIT
*,<CONST>,FLOATLIT
*,<INEQUALITY_OP>,LESSER
*,<INEQUALITY_OP>,GREATER
*,<INEQUALITY_OP>,LESSEREQ
*,<INEQUALITY_OP>,GREATEREQ
*,<EQUALITY_OP>,EQ
*,<EQUALITY_OP>,NEQ
*,<ADD_SUB_OP>,PLUS
*,<ADD_SUB_OP>,MINUS
*,<MUL_DIV_OP>,MULT
*,<MUL_DIV_OP>,DIV
*,<EXPR_LIST>,<EXPR> <EXPR_LIST_TAIL>
*,<EXPR_LIST>,NULL
*,<EXPR_LIST_TAIL>,COMMA <EXPR> <EXPR_LIST_TAIL>
*,<EXPR_LIST_TAIL>,NULL
*,<LVALUE_TAIL>,LBRACK <EXPR> RBRACK
*,<LVALUE_TAIL>,NULL
